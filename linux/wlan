#!/bin/sh

output='%s\n'
test_only=false
interface=wlp3s0
service=netctl-auto@$interface.service
prog=$(basename "$0")

usage () {
  unset -f echo
  echo "Usage: $prog [-fikqtvx]"
  echo "       $prog -h"
}
help () {
  unset -f echo
  echo Test if we can connect to the internet and restart the netctl
  echo searvice as neccessary.
  echo Options:
  echo '  -f  force reconnection'
  echo '  -i  print status'
  echo '  -k  kill/stop service'
  echo '  -q  be quiet'
  echo '  -t  only test connection'
  echo '  -v  be verbose'
  echo '  -x  debug mode'
}
echo () {
  printf "$output" "$*"
}
connection () {
  if timeout 1s ping -c 1 -W 1 -q localhost >/dev/null 2>&1; then
    # test if we can ping google
    if timeout 1s ping -c 1 -W 1 -q google.com >/dev/null 2>&1; then
      echo You seem to have internet connection.
      return 0
    else
      return 1
    fi
  else
    echo Can not ping localhost.
    exit 1
  fi
}

if [ $(id -u) -ne 0 ]; then
  # The askpass variable must be set to a path (no arguments).
  export SUDO_ASKPASS=/usr/lib/ssh/ssh-askpass
  sudo=sudo
fi

while getopts fhikqtvx FLAG; do
  case $FLAG in
    h) usage; help; exit;;
    f) exec $sudo systemctl restart $service;;
    i) exec systemctl --no-pager status $service;;
    k) exec $sudo systemctl stop $service; wifi off >/dev/null 2>&1;;
    t) test_only=true;;
    q) output=;;
    v) output='%s\n';;
    x) set -x;;
    *) usage; exit 2;;
  esac
done

if ! connection; then
  if $test_only; then
    echo "You don't have internet connection."
    exit 1
  else
    echo Reconecting to the network ...
    wifi on >/dev/null 2>&1
    $sudo systemctl restart $service
  fi
fi
