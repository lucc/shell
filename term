#!/bin/bash
# a script to start my favorite terminal emulator

version=2.1
args=( )
foreground=
execute=
big=
case $(uname) in
  Darwin) term=iterm;;
  Linux)  term=xterm;;
esac

usage () {
  echo "Usage: ${0##*/} [-bfx] [-e args ...]"
  echo "       ${0##*/} -h"
  echo "       ${0##*/} -v"
}
iterm_wrapper () {
  # iTerm2.app on Mac OS X
  exec osascript -- Default "${args[@]}" <<-EOF
  on run argv

    -- set the default values
    set theSession to "Default"
    set theCommand to ""
    set theLength to length of argv

    -- Parse the command line.  The first argument is the Profile name in
    -- iTerm.  The rest is a command line to execute.
    if theLength >= 1
      set theSession to item 1 of argv
      if theLength >=2
	repeat with i from 2 to theLength
	  set theCommand to theCommand & " " & quoted form of item i of argv
	end repeat
      end if
    end if

    -- open iTerm and run the command
    tell application "iTerm" to tell current terminal
      launch session theSession
      if theCommand is not ""
	tell the last session to write text "exec " & theCommand
      end if
      activate
    end tell

  end run
	EOF
}
urxvt_wrapper () {
  exec urxvt ${big:+-fn "$(get_urxvt_font):size=17"} ${1:+-e} "${args[@]}"
}
urxvtc_wrapper () {
  if [[ -n "$foreground" ]]; then
    urxvt_wrapper
  else
    urxvtc ${big:+-fn "$(get_urxvt_font):size=17"} ${1:+-e} "${args[@]}"
    if [[ $? -eq 2 ]]; then
      urxvtd -q -o -f
      urxvtc ${big:+-fn "$(get_urxvt_font):size=17"} ${1:+-e} "${args[@]}"
    fi
  fi
}
get_urxvt_font () {
  xrdb -query | sed -En 's/^urxvt\.font\s*:\s*(.*):size=[[:digit:]]+$/\1/ip'
}
xterm_wrapper () {
  exec xterm ${1:+-e} "${args[@]}"
}
gnome_terminal_wrapper () {
  if [[ -n "$foreground" ]]; then
    echo "How do I run $term in the foreground?" >&2
    exit 1
  fi
  # TODO gnome-terminal forks!!
  exec gnome-terminal ${1:+-x} "${args[@]}"
}
konsole_wrapper () {
  exec konsole ${foreground:+--nofork} ${1:+-e} "${args[@]}"
}

while getopts be:fhvx opt; do
  case $opt in
    h)
      usage
      exit 0
      ;;
    v)
      echo "term -- Version $version (wrapping $term)"
      exit 0
      ;;
    e)
      execute=1
      args=("${args[@]}" "$OPTARG" "${@:$OPTIND}")
      shift $#
      ;;
    b)
      big=1
      ;;
    x)
      set -x
      ;;
    f)
      foreground=1
      ;;
    *)
      usage >&2
      exit 2
      ;;
  esac
done

${term}_wrapper $execute
