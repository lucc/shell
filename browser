#!/bin/sh

# General script to start a browser.  Possible browsers:
# graphical: firefox qutebrowser dwb luakit jumanji surf uzbl
# text: elinks w3m links lynx

type=graphical
pipe=false

usage () {
  local prog=${0##*/}
  echo "Usage: $prog [-gtpPb] [url]"
  echo "       $prog -n [profile] [url]"
  echo "       cat file.html | $prog -s [options]"
}
help () {
  usage
  echo
  printf '  %s\t%s\n' \
    -g 'open a graphical browser'                                \
    -t 'open a text browser'                                     \
    -s 'expect document on stdin (no url allowed)'               \
    -n 'open a new instance with the given profile (implies -g)' \
    -p 'start in private browsing mode (implies -g)'             \
    -P 'start in private browsing mode (qutebrowser)'            \
    -b 'for banking'                                             \

}

qutebrowser () {
  qutebrowser_stable "$@"
}
qutebrowser_dev () {
  #export QT_QPA_PLATFORM=wayland-egl QT_WAYLAND_DISABLE_WINDOWDECORATION=1
  export PYTHONPATH=~/vcs/qutebrowser
  python -m qutebrowser "$@"
}
qutebrowser_stable () {
  command qutebrowser "$@"
}
qutebrowser_tmp () {
  local tempdir=$(mktemp -d)
  cp -r ~/.config/qutebrowser "$tempdir/config"
  mkdir "$tempdir/data"
  cp -r ~/.local/share/qutebrowser/userscripts "$tempdir/data/userscripts"
  #trap 'rm -rf "$tempdir"' EXIT SIGTERM SIGKILL
  command qutebrowser --basedir "$tempdir" "$@"
  rm -rf "$tempdir"
}
qutebrowser_private () {
  qutebrowser_tmp \
    --set auto_save.session false \
    --set content.headers.user_agent 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.106 Safari/537.36' \
    "$@"
}
firefox_profiles () {
  local ini=$HOME/.mozilla/firefox/profiles.ini
  grep '^Name=' "$ini" | cut -f 2 -d =
}
firefox_mac () {
  local profile
  for profile in $(firefox_profiles); do
    if [ "$profile" = "$1" ]; then
      # TODO
      exec open -na Firefox --args -P "$profile" -no-remote
    fi
  done
  echo "$1 is not a valid profile. Try one of $(firefox_profiles)."
  exit 2
}
firefox () {
  export VIMPERATOR_RUNTIME=~/.config/vimperator
  export VIMPERATOR_INIT="source $VIMPERATOR_RUNTIME/vimperatorrc"
  exec firefox "$@"
}
firefox_new () {
  local user=${1:-$USER}
  shift
  firefox -new-instance -P "$user" "$@"
}
firefox_private () {
  exec firefox --new-instance --private-window "$@"
}

text () {
  local text_browser=elinks
  if [ -t 1 ] || [ -t 2 ]; then
    exec "$text_browser" "$@"
  else
    exec term -e "$text_browser" "$@"
  fi
}
graphical () {
  qutebrowser "$@"
}
new_graphical () {
  firefox_new "$@"
}
private () {
  qutebrowser_private "$@"
}
bank () {
  qutebrowser_tmp "$@"
}

while getopts bhgntpPsx opt; do
  case $opt in
    b) type=bank;;
    h) help; exit;;
    g) type=graphical;;
    n) type=new_graphical;;
    t) type=text;;
    p) type=private;;
    P) type=firefox_private;;
    s) pipe=true;;
    x) set -x;;
    *) usage >&2; exit 2;
  esac
done
shift $((OPTIND-1))

if [ $# -eq 1 ] && [ "$1" = - ]; then
  shift
  pipe=true
fi

if $pipe; then
  # save stdin to a file
  file=$(mktemp -t tmp-$$-XXXXXX) || exit 3
  trap 'trap - HUB INT TERM; rm -f "$file" "$file.html"' HUB INT TERM
  cat > "$file" || exit 4
  case $(file --brief --mime-type "$file") in
    text/html)
      mv "$file" "$file.html"
      file=$file.html
      ;;
  esac
  $type "$file"
else
  $type "$@"
fi
